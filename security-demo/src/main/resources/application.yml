server:
  port: 8080
  session:
    timeout: 600
    cookie:
      name: security_cookie
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql:///security?useUnicode=true&useSSL=false&characterEncodging=UTF-8
    username: root
    password: 1234
    
######################### Druid连接池的配置信息  #################
    druid:
      #连接池的设置
      #初始化时建立物理连接的个数
      initial-size: 5
      #最小连接池数量
      min-idle: 5
      #最大连接池数量 maxIdle已经不再使用
      max-active: 20
      #获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      #既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-eviction-runs-millis: 60000
      #销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
      min-evictable-idle-time-millis: 30000
      #用来检测连接是否有效的sql 必须是一个查询语句
      #mysql中为 select 'x'
      #oracle中为 select 1 from dual
      validation-query: select 'x'
      #申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      #归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      #当数据库抛出不可恢复的异常时,抛弃该连接
#      exception-sorter: true
      #是否缓存preparedStatement,mysql5.5+建议开启
      #spring.datasource.druid.pool-prepared-statements=true
      #当值大于0时poolPreparedStatements会自动修改为true
      max-pool-prepared-statement-per-connection-size: 20
      #配置扩展插件
      filters: stat,wall
      #通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      #合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      #设置访问druid监控页的账号和密码,默认没有
#      stat-view-servlet:
#        login-username: 
#        login-password: 
  session:
    store-type: redis
    
  redis:
    host: localhost
    port: 6379
    
  mvc:
    view:
      prefix: /
      suffix: .html
    
isecurity:
  browser: 
#    loginPage: /demoSignin.html
    login-type: JSON
  social:
    qq:
      provider-id: qq
      app-id: 101386962
      app-secret: 2a0f820407df400b84a854d054be8b6a
    filter-processes-url: /login
    wechat:
      provider-id: wechat
      app-id: wxd99431bbff8305a0
      app-secret: 60f78681d063590a469f1b297feff3c4
  oauth2:
    clients:
      - client-id: security
        client-secret: security
        access-token-validity-seconds: 3600
  
#security:
#  oauth2:
#    client:
#      client-id: security
#      client-secret: security
